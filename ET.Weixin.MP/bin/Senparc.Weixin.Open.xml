<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Senparc.Weixin.Open</name>
    </assembly>
    <members>
        <member name="T:Senparc.Weixin.Open.CommonAPIs.CommonApi">
            <summary>
            通用接口
            通用接口用于和微信服务器通讯，一般不涉及自有网站服务器的通讯
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.CommonApi.GetComponentAccessToken(System.String,System.String,System.String,System.Int32)">
            <summary>
            获取第三方平台access_token
            </summary>
            <param name="componentAppId">第三方平台appid</param>
            <param name="componentAppSecret">第三方平台appsecret</param>
            <param name="componentVerifyTicket">微信后台推送的ticket，此ticket会定时推送，具体请见本页末尾的推送说明</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.CommonApi.GetPreAuthCode(System.String,System.String,System.String,System.Int32)">
            <summary>
            获取预授权码
            </summary>
            <param name="componentAppId">第三方平台方appid</param>
            <param name="componentAppSecret"></param>
            <param name="componentVerifyTicket"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.CommonJsonSend.Send(System.String,System.String,System.Object,Senparc.Weixin.Open.CommonAPIs.CommonJsonSendType,System.Int32)">
            <summary>
            向需要AccessToken的API发送消息的公共方法
            </summary>
            <param name="accessToken">这里的AccessToken是通用接口的AccessToken，非OAuth的。如果不需要，可以为null，此时urlFormat不要提供{0}参数</param>
            <param name="urlFormat"></param>
            <param name="data">如果是Get方式，可以为null</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.CommonJsonSend.Send``1(System.String,System.String,System.Object,Senparc.Weixin.Open.CommonAPIs.CommonJsonSendType,System.Int32)">
            <summary>
            向需要AccessToken的API发送消息的公共方法
            </summary>
            <param name="accessToken">这里的AccessToken是通用接口的AccessToken，非OAuth的。如果不需要，可以为null，此时urlFormat不要提供{0}参数</param>
            <param name="urlFormat"></param>
            <param name="data">如果是Get方式，可以为null</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="F:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenBag.Lock">
            <summary>
            只针对这个AppId的锁
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenContainer">
            <summary>
            通用接口ComponentAccessToken容器，用于自动管理ComponentAccessToken，如果过期会重新获取
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenContainer.Register(System.String,System.String)">
            <summary>
            注册应用凭证信息，此操作只是注册，不会马上获取Token，并将清空之前的Token，
            </summary>
            <param name="componentAppId"></param>
            <param name="componentAppSecret"></param>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenContainer.TryGetToken(System.String,System.String,System.String,System.Boolean)">
            <summary>
            使用完整的应用凭证获取Token，如果不存在将自动注册
            </summary>
            <param name="componentAppId"></param>
            <param name="componentAppSecret"></param>
            <param name="componentVerifyTicket"></param>
            <param name="getNewToken"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenContainer.GetToken(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="componentAppId"></param>
            <param name="componentVerifyTicket"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenContainer.GetTokenResult(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="componentAppId"></param>
            <param name="componentVerifyTicket"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.ComponentAccessTokenContainer.CheckRegistered(System.String)">
            <summary>
            检查是否已经注册
            </summary>
            <param name="componentAppId"></param>
            <returns></returns>
        </member>
        <member name="F:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeBag.Lock">
            <summary>
            只针对这个AppId的锁
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeContainer">
            <summary>
            通用接口PreAuthCode容器，用于自动管理PreAuthCode，如果过期会重新获取
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeContainer.Register(System.String,System.String)">
            <summary>
            注册应用凭证信息，此操作只是注册，不会马上获取Token，并将清空之前的Token，
            </summary>
            <param name="componentAppId"></param>
            <param name="componentAppSecret"></param>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeContainer.TryGetToken(System.String,System.String,System.String,System.Boolean)">
            <summary>
            使用完整的应用凭证获取Token，如果不存在将自动注册
            </summary>
            <param name="componentAppId"></param>
            <param name="componentAppSecret"></param>
            <param name="componentVerifyTicket"></param>
            <param name="getNewToken"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeContainer.GetToken(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="componentAppId"></param>
            <param name="componentVerifyTicket"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeContainer.GetTokenResult(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="componentAppId"></param>
            <param name="componentVerifyTicket"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.CommonAPIs.PreAuthCodeContainer.CheckRegistered(System.String)">
            <summary>
            检查是否已经注册
            </summary>
            <param name="componentAppId"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Open.Entities.ComponentAccessTokenResult">
            <summary>
            获取第三方平台access_token
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.Entities.ComponentAccessTokenResult.component_access_token">
            <summary>
            第三方平台access_token
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.Entities.ComponentAccessTokenResult.expires_in">
            <summary>
            有效期
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.Entities.PreAuthCodeResult">
            <summary>
            获取预授权码返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.Entities.PreAuthCodeResult.pre_auth_code">
            <summary>
            预授权码
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.Entities.PreAuthCodeResult.expires_in">
            <summary>
            有效期，为20分钟
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.OptionName">
            <summary>
            选项设置信息选项名称
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.OptionName.location_report">
            <summary>
            地理位置上报选项
            0	无上报
            1	进入会话时上报
            2	每5s上报
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.OptionName.voice_recognize">
            <summary>
            语音识别开关选项
            0	关闭语音识别
            1	开启语音识别
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.OptionName.customer_service">
            <summary>
            客服开关选项
            0	关闭多客服
            1	开启多客服
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.InfoType">
            <summary>
            公众号第三方平台推送消息类型
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.InfoType.component_verify_ticket">
            <summary>
            推送component_verify_ticket协议
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.InfoType.unauthorized">
            <summary>
            推送取消授权通知
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.OAuthScope">
            <summary>
            应用授权作用域
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.OAuthScope.snsapi_base">
            <summary>
            不弹出授权页面，直接跳转，只能获取用户openid
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Open.OAuthScope.snsapi_userinfo">
            <summary>
            弹出授权页面，可通过openid拿到昵称、性别、所在地。并且，即使在未关注的情况下，只要用户授权，也能获取其信息
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Open.Helpers.InfoTypeHelper.GetRequestInfoType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回InfoType
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.Helpers.InfoTypeHelper.GetRequestInfoType(System.String)">
            <summary>
            根据xml信息，返回InfoType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.MessageHandlers.ThirdPartyMessageHandler.OnComponentVerifyTicketRequest(Senparc.Weixin.Open.RequestMessageComponentVerifyTicket)">
            <summary>
            推送component_verify_ticket协议
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.MessageHandlers.ThirdPartyMessageHandler.OnUnauthorizedRequest(Senparc.Weixin.Open.RequestMessageUnauthorized)">
            <summary>
            推送取消授权通知
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.OAuthJoin.OAuthJoinAPI.GetJoinAuthorizeUrl(System.String,System.String,System.String)">
            <summary>
            获取授权地址
            </summary>
            <param name="componentAppId">第三方平台方appid</param>
            <param name="preAuthCode">预授权码</param>
            <param name="redirectUrl">回调URL</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.OAuthJoin.OAuthJoinAPI.GetJoinAccessToken(System.String,System.String,System.String,System.Int32)">
            <summary>
            使用授权码换取公众号的授权信息
            </summary>
            <param name="componentAppId">服务开发方的appid</param>
            <param name="componentAccessToken">服务开发方的access_token</param>
            <param name="authCode">授权code,会在授权成功时返回给第三方平台，详见第三方平台授权流程说明</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.OAuthJoin.OAuthJoinAPI.GetAuthorizerOption(System.String,System.String,System.String,Senparc.Weixin.Open.OptionName,System.Int32)">
            <summary>
            刷新access_token
            由于access_token拥有较短的有效期，当access_token超时后，可以使用refresh_token进行刷新，refresh_token拥有较长的有效期（30天），当refresh_token失效的后，需要用户重新授权。
            </summary>
            <param name="componentAppId">服务开发商的appid</param>
            <param name="componentAccessToken">服务开发方的access_token</param>
            <param name="authorizerAppId">授权公众号appid</param>
            <param name="optionName">选项名称</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Open.OAuthJoin.OAuthJoinAPI.SetAuthorizerOption(System.String,System.String,System.String,Senparc.Weixin.Open.OptionName,System.Int32,System.Int32)">
            <summary>
            设置授权方的选项信息
            </summary>
            <param name="componentAccessToken">服务开发方的access_token</param>
            <param name="componentAppId">服务开发商的appid</param>
            <param name="authorizerAppId">授权公众号appid</param>
            <param name="optionName">选项名称</param>
            <param name="optionValue">设置的选项值</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Open.OAuthJoin.AuthorizerOptionResult">
            <summary>
            获取授权方的选项设置信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizerOptionResult.authorizer_appid">
            <summary>
            第三方平台appid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizerOptionResult.option_name">
            <summary>
            授权公众号appid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizerOptionResult.option_value">
            <summary>
            选项名称
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Open.OAuthJoin.OAuthJoinResult">
            <summary>
            使用授权码换取公众号的授权信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.OAuthJoinResult.authorization_info">
            <summary>
            授权信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizationInfo.authorizer_appid">
            <summary>
            授权方appid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizationInfo.authorizer_access_token">
            <summary>
            授权方令牌（在授权的公众号具备API权限时，才有此返回值）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizationInfo.expires_in">
            <summary>
            有效期（在授权的公众号具备API权限时，才有此返回值）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizationInfo.authorizer_refresh_token">
            <summary>
            刷新令牌（在授权的公众号具备API权限时，才有此返回值），刷新令牌主要用于公众号第三方平台获取和刷新已授权用户的access_token，只会在授权时刻提供，请妥善保存。 一旦丢失，只能让用户重新授权，才能再次拿到新的刷新令牌
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Open.OAuthJoin.AuthorizationInfo.func_info">
             <summary>
             公众号授权给开发者的权限集列表（请注意，当出现用户已经将消息与菜单权限集授权给了某个第三方，再授权给另一个第三方时，由于该权限集是互斥的，后一个第三方的授权将去除此权限集，开发者可以在返回的func_info信息中验证这一点，避免信息遗漏），
             1到8分别代表：
            消息与菜单权限集
            用户管理权限集
            帐号管理权限集
            网页授权权限集
            微信小店权限集
            多客服权限集
            业务通知权限集
            微信卡券权限集
             </summary>
        </member>
        <!-- 对于成员“M:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAPI.GetOpenAuthorizeUrl(System.String,System.String,System.String,Senparc.Weixin.Open.OAuthScope,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAPI.GetOpenAccessToken(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            通过code换取access_token
            </summary>
            <param name="appId">公众号的appid</param>
            <param name="code">填写第一步获取的code参数</param>
            <param name="componentAppId">服务开发方的appid</param>
            <param name="componentAccessToken">服务开发方的access_token</param>
            <param name="grantType">填authorization_code</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAPI.RefreshOpenToken(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            刷新access_token
            由于access_token拥有较短的有效期，当access_token超时后，可以使用refresh_token进行刷新，refresh_token拥有较长的有效期（30天），当refresh_token失效的后，需要用户重新授权。
            </summary>
            <param name="appId">公众号的appid</param>
            <param name="refreshToken">填写通过access_token获取到的refresh_token参数</param>
            <param name="componentAppId">服务开发商的appid</param>
            <param name="componentAccessToken">服务开发方的access_token</param>
            <param name="grantType">填refresh_token</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAccessTokenResult">
            <summary>
            代公众号发起网页授权获取OAuth AccessToken的结果
            如果错误，返回结果{"errcode":40029,"errmsg":"invalid code"}
            </summary>
        </member>
        <member name="P:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAccessTokenResult.access_token">
            <summary>
            接口调用凭证
            </summary>
        </member>
        <member name="P:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAccessTokenResult.expires_in">
            <summary>
            access_token接口调用凭证超时时间，单位（秒）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAccessTokenResult.refresh_token">
            <summary>
            用户刷新access_token
            </summary>
        </member>
        <member name="P:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAccessTokenResult.openid">
            <summary>
            授权用户唯一标识
            </summary>
        </member>
        <member name="P:Senparc.Weixin.MP.AdvancedAPIs.OAuthOpen.OAuthOpenAccessTokenResult.scope">
            <summary>
            用户授权的作用域，使用逗号（,）分隔
            </summary>
        </member>
    </members>
</doc>
